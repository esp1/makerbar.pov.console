cmdhistory=["(macroexpand '(with-matrix \\"hi\\"))" "(macroexpand '(with-matrix \\"hi\\" \\"there\\"))" "(macroexpand '(with-matrix \\"hi\\"))" "(- 80 20)" "(- 80 20 10)" "(>> 100 1)" ">>>" "<<" "<<<" "0xFF" "0xff" "(short 256)" "(byte 256)" "(byte 255\\n      )" "(byte 15)" "(byte 16)" "(byte 100)" "(byte 250)" "(byte 200)" "(byte 127)" "(byte 128)" "img" "image" "@image" "(if-let [img @image])" "(if-let [img @image] \\"hi\\")" "(into-array [\\"a\\" \\"b\\"])" "(aget (into-array [\\"a\\" \\"b\\"]) 1)" "(aget (into-array [\\"a\\" \\"b\\"]) 0)" "(.equalsIgnoreCase \\"A\\" \\"a\\")" "(.lastIndexOf \\"a.b.c.d\\" \\".\\")" "(subs \\"a.b.c.d\\" (.lastIndexOf \\"a.b.c.d\\" \\".\\"))" "/Users/esp/Movies/Christine and Edwin's Wedding/CASUAL.MOV" "\\"/Users/esp/Movies/Christine and Edwin's Wedding/CASUAL.MOV\\"" "(let [file-path \\"/Users/esp/Movies/Christine and Edwin's Wedding/CASUAL.MOV\\"]\\n  (subs file-path (.lastIndexOf file-path \\".\\")))" "(def img (q/load-image \\"/Users/esp/Pictures/Desktop Wallpaper/Broccoli House.jpg\\"))" "q/load-image" "(use 'clojure.repl)" "(pst *e)" "(a/current-applet)" "(update-in [\:x] inc {\:x 1})" "(update-in {\:x 1} [\:x] inc 1)" "(update-in {\:x 1} [\:x] inc)" "(update-in {\:x 1} [\:x] \#(+ % 5))" "(% 5 2)" "(mod 5 2)" "(wrapped 5 0 255)" "(wrapped 5 \\n         255)" "(wrapped 5 255)" "(mod 10 255)" "(wrapped 5 255)" "(wrapped 500\\n         255)" "(wrapped 10 0 4)"]
eclipse.preferences.version=1
